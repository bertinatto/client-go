// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/console/v1"
	consolev1 "github.com/openshift/client-go/console/applyconfigurations/console/v1"
	typedconsolev1 "github.com/openshift/client-go/console/clientset/versioned/typed/console/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeConsoleQuickStarts implements ConsoleQuickStartInterface
type fakeConsoleQuickStarts struct {
	*gentype.FakeClientWithListAndApply[*v1.ConsoleQuickStart, *v1.ConsoleQuickStartList, *consolev1.ConsoleQuickStartApplyConfiguration]
	Fake *FakeConsoleV1
}

func newFakeConsoleQuickStarts(fake *FakeConsoleV1) typedconsolev1.ConsoleQuickStartInterface {
	return &fakeConsoleQuickStarts{
		gentype.NewFakeClientWithListAndApply[*v1.ConsoleQuickStart, *v1.ConsoleQuickStartList, *consolev1.ConsoleQuickStartApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("consolequickstarts"),
			v1.SchemeGroupVersion.WithKind("ConsoleQuickStart"),
			func() *v1.ConsoleQuickStart { return &v1.ConsoleQuickStart{} },
			func() *v1.ConsoleQuickStartList { return &v1.ConsoleQuickStartList{} },
			func(dst, src *v1.ConsoleQuickStartList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ConsoleQuickStartList) []*v1.ConsoleQuickStart {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.ConsoleQuickStartList, items []*v1.ConsoleQuickStart) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
