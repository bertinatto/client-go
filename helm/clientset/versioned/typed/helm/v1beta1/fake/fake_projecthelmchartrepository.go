// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/openshift/api/helm/v1beta1"
	helmv1beta1 "github.com/openshift/client-go/helm/applyconfigurations/helm/v1beta1"
	typedhelmv1beta1 "github.com/openshift/client-go/helm/clientset/versioned/typed/helm/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeProjectHelmChartRepositories implements ProjectHelmChartRepositoryInterface
type fakeProjectHelmChartRepositories struct {
	*gentype.FakeClientWithListAndApply[*v1beta1.ProjectHelmChartRepository, *v1beta1.ProjectHelmChartRepositoryList, *helmv1beta1.ProjectHelmChartRepositoryApplyConfiguration]
	Fake *FakeHelmV1beta1
}

func newFakeProjectHelmChartRepositories(fake *FakeHelmV1beta1, namespace string) typedhelmv1beta1.ProjectHelmChartRepositoryInterface {
	return &fakeProjectHelmChartRepositories{
		gentype.NewFakeClientWithListAndApply[*v1beta1.ProjectHelmChartRepository, *v1beta1.ProjectHelmChartRepositoryList, *helmv1beta1.ProjectHelmChartRepositoryApplyConfiguration](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("projecthelmchartrepositories"),
			v1beta1.SchemeGroupVersion.WithKind("ProjectHelmChartRepository"),
			func() *v1beta1.ProjectHelmChartRepository { return &v1beta1.ProjectHelmChartRepository{} },
			func() *v1beta1.ProjectHelmChartRepositoryList { return &v1beta1.ProjectHelmChartRepositoryList{} },
			func(dst, src *v1beta1.ProjectHelmChartRepositoryList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.ProjectHelmChartRepositoryList) []*v1beta1.ProjectHelmChartRepository {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.ProjectHelmChartRepositoryList, items []*v1beta1.ProjectHelmChartRepository) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
